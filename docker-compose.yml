services:
    cache:
        image: redis:alpine
        container_name: todo-redis-cache
        networks:
            - todo-network
        ports:
            - "6379:6379"
        healthcheck:
          test: ["CMD", "redis-cli", "ping"]
          interval: 1m30s
          timeout: 30s
          retries: 5
          start_period: 3s

    api:
        build:
            context: src/server
            dockerfile: Dockerfile
        image: todo-api:latest
        container_name: todo-api
        ports:
            - "8070:8080"
        networks:
            - todo-network
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
        depends_on:
            - cache
        command:
            - "sh -c dotnet Todo.Api.dll ef database update && dotnet Todo.Api.dll"

    client:
        build: src/client
        image: todo-client:latest
        container_name: todo-client
        networks:
            - todo-network
        environment:
            - VITE_SERVER_URL=http://todo-api:8070/api
        depends_on:
            - api
        volumes:
            - dist:/Todo

    reverse-proxy:
        image: nginx:alpine
        container_name: todo-reverse-proxy
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - /var/run/docker.sock:/tmp/docker.sock:ro
        networks:
            - todo-network
        depends_on:
            - cache
            - api
            - client

volumes:
    dist:
        name: dist

networks:
    todo-network:
        driver: bridge
        name: todo-network
